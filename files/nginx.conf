user  nginx;
worker_processes  __PROCNUM__;

error_log  /var/log/nginx/__HOSTNAME__/error_log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    server_tokens     off;
    include       /usr/local/nginx/conf/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/__HOSTNAME__/access_log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  5;

    gzip             on;
    gzip_disable     "MSIE [1-6]\.";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    proxy_temp_path   /var/tmp/nginx;
    proxy_cache_key   $scheme://$host$request_uri$is_args$args;
    proxy_set_header  Host             $host;
    proxy_set_header  X-Real-IP       $remote_addr;
    proxy_set_header  X-Forwarded-Host   $host;
    proxy_set_header  X-Forwarded-Server $host;
    proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header  Referer                $http_referer;
    proxy_set_header  PHP_AUTH_USER $remote_user;
    proxy_set_header  PHP_AUTH_PW $http_authorization;
    proxy_set_header  If-None-Match $http_if_none_match;

    server {
        listen      80 default_server;
        server_name     _;
        return 444;
    }

    server {
        listen       80;
        #listen       443 ssl;
        server_name  __FQDN__;
        #ssl_certificate /var/www/__HOSTNAME__/config/__FQDN__.pem;
        #ssl_certificate_key /var/www/__HOSTNAME__/config/__FQDN__.key;
        #ssl_protocols SSLv3 TLSv1;
        #ssl_ciphers ALL:!ADH:!EXPORT:!LOW:!RC4:!MD5;
        #ssl_prefer_server_ciphers on;
		location / {
				default_type text/html;
				content_by_lua '
						ngx.say("<p>Hello, world.<p>")
				';
        }
    }

    include /usr/local/nginx/conf.d/*.conf;
}
